<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.relly.blog.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.relly.blog.entity.UserEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="createUser" jdbcType="VARCHAR" property="createUser" />
    <result column="isDelete" jdbcType="INTEGER" property="isDelete" />
    <result column="updateUser" jdbcType="VARCHAR" property="updateUser" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="userName" jdbcType="VARCHAR" property="userName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, createTime, updateTime, createUser, isDelete, updateUser, name, userName, password
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=VARCHAR}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from user
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.relly.blog.entity.UserEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into user (id, createTime, updateTime, 
      createUser, isDelete, updateUser, 
      name, userName, password, salt,verify,bgColor
      )
    values (#{id,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createUser,jdbcType=VARCHAR}, #{isDelete,jdbcType=INTEGER}, #{updateUser,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR},#{verify,jdbcType=VARCHAR},
      #{bgColor,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.relly.blog.entity.UserEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
      <if test="createUser != null">
        createUser,
      </if>
      <if test="isDelete != null">
        isDelete,
      </if>
      <if test="updateUser != null">
        updateUser,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="userName != null">
        userName,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="verify != null">
        verify,
      </if>
      <if test="bgColor != null">
        bgColor,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="verify != null">
        #{verify,jdbcType=VARCHAR},
      </if>
      <if test="bgColor != null">
        #{bgColor,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.relly.blog.entity.UserEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user
    <set>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        createUser = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        isDelete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="updateUser != null">
        updateUser = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        userName = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="openid != null">
        openid = #{openid,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.relly.blog.entity.UserEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user
    set createTime = #{createTime,jdbcType=TIMESTAMP},
      updateTime = #{updateTime,jdbcType=TIMESTAMP},
      createUser = #{createUser,jdbcType=VARCHAR},
      isDelete = #{isDelete,jdbcType=INTEGER},
      updateUser = #{updateUser,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      userName = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <select id="getUserByUserName" resultType="com.relly.blog.entity.UserEntity">
    select * from user where isDelete = 0 and userName = #{userName};
  </select>
  <select id="getUserListCount" resultType="java.lang.Integer">
    SELECT count(*)
    FROM
    user u
    WHERE u.isDelete = 0
  </select>
  <select id="getUserList" resultType="com.relly.blog.dto.UserDTO">
    select id,name,userName FROM user u where u.isDelete = 0
    ORDER BY u.createTime DESC
    <include refid="limit"/>
  </select>
  <select id="getUserDetail" resultType="com.relly.blog.dto.UserDetailDTO">
    SELECT
        u.`name`,
        u.bgColor,
        u.userName,
        ud.*
    FROM
        `user` u
    JOIN user_detail ud ON u.id = ud.userId
    WHERE
	u.id = #{userId}
  </select>
    <select id="getAllUserList" resultType="com.relly.blog.dto.AllUserDTO">
    select
    *,
    id AS 'key'
    from user where  isDelete = 0
    </select>
  <select id="getUserListByRole" resultType="java.lang.String">
  SELECT a.id AS 'key'
  FROM
  user a
  WHERE
  a.id IN (
  SELECT b.uid
  FROM
  user_role b
  WHERE
  role_id = #{roleId}
  )
  AND isDelete = 0
   </select>
  <select id="getUserByVerify" resultType="com.relly.blog.entity.UserEntity">
    select
    *
    from user where verify = #{verify}
  </select>
  <select id="getUserByOpenId" resultType="com.relly.blog.entity.UserEntity">
    select
    *
    from user where openid = #{openid}
  </select>
  <sql id="limit">
        limit #{pageObject.startIndex}, #{pageObject.pageSize}
  </sql>
</mapper>