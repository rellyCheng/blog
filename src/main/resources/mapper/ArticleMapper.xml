<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.relly.blog.mapper.ArticleMapper">
  <resultMap id="BaseResultMap" type="com.relly.blog.entity.ArticleEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="CHAR" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="type" jdbcType="CHAR" property="type" />
    <result column="cover" jdbcType="VARCHAR" property="cover" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="href" jdbcType="VARCHAR" property="href" />
    <result column="like" jdbcType="INTEGER" property="like" />
    <result column="owner" jdbcType="CHAR" property="owner" />
    <result column="createUser" jdbcType="CHAR" property="createUser" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="updateUser" jdbcType="CHAR" property="updateUser" />
    <result column="isDelete" jdbcType="BIT" property="isDelete" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, title, content, type, cover, description, href, like, owner, createUser, createTime, 
    updateTime, updateUser, isDelete
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from article
    where id = #{id,jdbcType=CHAR}
  </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from article
    where id = #{id,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="com.relly.blog.entity.ArticleEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into article (id, title, content, 
      type, cover, description, 
      href, like, owner, createUser, 
      createTime, updateTime, updateUser, 
      isDelete)
    values (#{id,jdbcType=CHAR}, #{title,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{type,jdbcType=CHAR}, #{cover,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{href,jdbcType=VARCHAR}, #{like,jdbcType=INTEGER}, #{owner,jdbcType=CHAR}, #{createUser,jdbcType=CHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=CHAR}, 
      #{isDelete,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.relly.blog.entity.ArticleEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="cover != null">
        cover,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="href != null">
        href,
      </if>
      <if test="like != null">
        like,
      </if>
      <if test="owner != null">
        owner,
      </if>
      <if test="createUser != null">
        createUser,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
      <if test="updateUser != null">
        updateUser,
      </if>
      <if test="isDelete != null">
        isDelete,
      </if>
      <if test="isPublic != null">
        isPublic,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=CHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=CHAR},
      </if>
      <if test="cover != null">
        #{cover,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="href != null">
        #{href,jdbcType=VARCHAR},
      </if>
      <if test="like != null">
        #{like,jdbcType=INTEGER},
      </if>
      <if test="owner != null">
        #{owner,jdbcType=CHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=CHAR},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=BIT},
      </if>
      <if test="isPublic != null">
        #{isPublic,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.relly.blog.entity.ArticleEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update article
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=CHAR},
      </if>
      <if test="cover != null">
        cover = #{cover,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="href != null">
        href = #{href,jdbcType=VARCHAR},
      </if>
      <if test="like != null">
        like = #{like,jdbcType=INTEGER},
      </if>
      <if test="owner != null">
        owner = #{owner,jdbcType=CHAR},
      </if>
      <if test="createUser != null">
        createUser = #{createUser,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        updateUser = #{updateUser,jdbcType=CHAR},
      </if>
      <if test="isDelete != null">
        isDelete = #{isDelete,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.relly.blog.entity.ArticleEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update article
    set title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      type = #{type,jdbcType=CHAR},
      cover = #{cover,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      href = #{href,jdbcType=VARCHAR},
      like = #{like,jdbcType=INTEGER},
      owner = #{owner,jdbcType=CHAR},
      createUser = #{createUser,jdbcType=CHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      updateTime = #{updateTime,jdbcType=TIMESTAMP},
      updateUser = #{updateUser,jdbcType=CHAR},
      isDelete = #{isDelete,jdbcType=BIT}
    where id = #{id,jdbcType=CHAR}
  </update>

  <select id="getArticleListByUser" resultType="com.relly.blog.dto.ArticleDTO">
   SELECT
      id AS articleId,
      a.*,
      b.message,
      c.star
    FROM
        article a,
    (
        SELECT
            COUNT(*) message
        FROM
            article a
        JOIN article_message am ON a.id = am.articleId
    ) AS b,
    (
        SELECT
            COUNT(*) star
        FROM
            article a
        JOIN article_star astar ON a.id = astar.articleId
    ) AS c
    WHERE
    a.isDelete = 0
    AND a.createUser = #{userId}
  </select>
  <select id="gettMyArticleListCount" resultType="java.lang.Integer">
    SELECT
            COUNT(*)
        FROM
            article
            WHERE isDelete = 0 AND createUser = #{userId}
  </select>
  <select id="getMyArticleListMore" resultType="com.relly.blog.dto.ArticleDTO">
    select
    *,
    id as articleId
    from article where isDelete = 0 and createUser=#{userId}
    ORDER BY createTime DESC
    <include refid="limit"/>
  </select>
  <select id="getArticleDetail" resultType="com.relly.blog.dto.ArticleDTO">
    select
    *,
    id as articleId
    from article where id = #{articleId}
  </select>
    <select id="getArticleMessage" resultType="com.relly.blog.dto.ArticleMessageDTO">
     SET @crank=0;
     SELECT
        article_message.id,
        article_message.createTime,
        articleId,
        parentId,
        content AS commentContent,
        aite,
        `name`,
        `user`.bgColor,
        avatar,
        @crank := @crank +1 as rank
    FROM
        article_message
        LEFT JOIN `user` ON `user`.id = article_message.createUser
        LEFT JOIN user_detail ON article_message.createUser = user_detail.userId
    WHERE
        articleId = #{articleId}
    AND article_message.isDelete = 0
    AND parentId IS NULL
    order by createTime desc
      <include refid="limit"/>
    </select>
  <select id="getArticleMessageChildren" resultType="com.relly.blog.dto.ArticleMessageDTO">

    SELECT
        article_message.id,
        article_message.createTime,
        articleId,
        parentId,
        content AS commentContent,
        aite,
        `name`,
        `user`.bgColor,
        avatar
    FROM
        article_message
        LEFT JOIN `user` ON `user`.id = article_message.createUser
    LEFT JOIN user_detail ON article_message.createUser = user_detail.userId
    WHERE
        parentId = #{parentId}
    AND articleId = #{articleId}
    AND article_message.isDelete = 0
    order by createTime asc
  </select>
  <select id="getArticleMessageCount" resultType="java.lang.Integer">
     SELECT
        count(article_message.id)
    FROM
        article_message
    WHERE
        articleId = #{articleId}
    AND isDelete = 0
    AND parentId IS NULL
  </select>
  <sql id="limit">
        limit #{pageObject.startIndex}, #{pageObject.pageSize}
  </sql>
</mapper>